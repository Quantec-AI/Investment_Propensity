{"ast":null,"code":"import _slicedToArray from\"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'../App.css';import Header from'../component/Header';import NextButton from'../component/NextButton';import QNA from'../content/QNA';import Box from'@mui/material/Box';import Typography from'@mui/material/Typography';import Slider from'@mui/material/Slider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QnA=QNA[16];function Q17(props){var Res=props.location.state.Res;var _useState=useState(10),_useState2=_slicedToArray(_useState,2),Resp=_useState2[0],getResp=_useState2[1];QnA.status=true;function valueLabelFormat(Resp){var units=['만원','억원'];var unitIndex=0;var scaledValue=Resp;Res[QnA.page]=parseInt(scaledValue);if(scaledValue<10000){scaledValue=Math.round(scaledValue/10)*10;}while(scaledValue>=10000&&unitIndex<units.length-1){unitIndex+=1;scaledValue/=10000;}return\"\".concat(parseInt(scaledValue),\" \").concat(units[unitIndex]);}function calculateValue(Resp){return 10*Math.pow(10,Resp/25);}var handleChange=function handleChange(event,newValue){if(typeof newValue==='number'){getResp(newValue);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"Content\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"page\",children:QnA.page}),/*#__PURE__*/_jsxs(\"h1\",{className:\"question\",children:[\" \",QnA.Question]}),/*#__PURE__*/_jsxs(Box,{sx:{width:300,display:'inline-block'},children:[/*#__PURE__*/_jsxs(Typography,{id:\"non-linear-slider\",gutterBottom:true,children:[\"\\uD22C\\uC790 \\uAE08\\uC561: \",valueLabelFormat(calculateValue(Resp))]}),/*#__PURE__*/_jsx(Slider,{value:Resp,min:0,step:0.02,max:100,scale:calculateValue,getAriaValueText:valueLabelFormat,valueLabelFormat:valueLabelFormat,onChange:handleChange,\"aria-labelledby\":\"non-linear-slider\"})]}),/*#__PURE__*/_jsx(NextButton,{Path:\"/q18\",Res:Res,Text:'Next'})]})]});}export default Q17;","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q17.js"],"names":["React","useState","Header","NextButton","QNA","Box","Typography","Slider","QnA","Q17","props","Res","location","state","Resp","getResp","status","valueLabelFormat","units","unitIndex","scaledValue","page","parseInt","Math","round","length","calculateValue","pow","handleChange","event","newValue","Question","width","display"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,gBAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAGJ,GAAG,CAAC,EAAD,CAAf,CAEA,QAASK,CAAAA,GAAT,CAAaC,KAAb,CAAoB,CAClB,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,QAAN,CAAeC,KAAf,CAAqBF,GAAjC,CAEA,cAAwBV,QAAQ,CAAC,EAAD,CAAhC,wCAAOa,IAAP,eAAaC,OAAb,eACAP,GAAG,CAACQ,MAAJ,CAAa,IAAb,CAEA,QAASC,CAAAA,gBAAT,CAA0BH,IAA1B,CAAgC,CAC9B,GAAMI,CAAAA,KAAK,CAAG,CAAC,IAAD,CAAO,IAAP,CAAd,CAEA,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAIC,CAAAA,WAAW,CAAGN,IAAlB,CAEAH,GAAG,CAACH,GAAG,CAACa,IAAL,CAAH,CAAgBC,QAAQ,CAACF,WAAD,CAAxB,CAEA,GAAGA,WAAW,CAAG,KAAjB,CAAwB,CACtBA,WAAW,CAAGG,IAAI,CAACC,KAAL,CAAWJ,WAAW,CAAC,EAAvB,EAA2B,EAAzC,CACD,CAED,MAAOA,WAAW,EAAI,KAAf,EAAwBD,SAAS,CAAGD,KAAK,CAACO,MAAN,CAAe,CAA1D,CAA6D,CAC3DN,SAAS,EAAI,CAAb,CACAC,WAAW,EAAI,KAAf,CACD,CACD,gBAAUE,QAAQ,CAACF,WAAD,CAAlB,aAAmCF,KAAK,CAACC,SAAD,CAAxC,EACD,CAED,QAASO,CAAAA,cAAT,CAAwBZ,IAAxB,CAA8B,CAC5B,MAAO,IAAKS,IAAI,CAACI,GAAL,CAAS,EAAT,CAAcb,IAAD,CAAO,EAApB,CAAZ,CACD,CAED,GAAMc,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxC,GAAI,MAAOA,CAAAA,QAAP,GAAoB,QAAxB,CAAkC,CAChCf,OAAO,CAACe,QAAD,CAAP,CACD,CACF,CAJD,CAMA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,MAAD,IADF,cAEE,aAAK,SAAS,CAAC,SAAf,wBACE,WAAI,SAAS,CAAC,MAAd,UAAuBtB,GAAG,CAACa,IAA3B,EADF,cAEE,YAAI,SAAS,CAAC,UAAd,eAA4Bb,GAAG,CAACuB,QAAhC,GAFF,cAGE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,KAAK,CAAE,GAAT,CAAcC,OAAO,CAAE,cAAvB,CAAT,wBACE,MAAC,UAAD,EAAY,EAAE,CAAC,mBAAf,CAAmC,YAAY,KAA/C,yCACUhB,gBAAgB,CAACS,cAAc,CAACZ,IAAD,CAAf,CAD1B,GADF,cAIE,KAAC,MAAD,EACE,KAAK,CAAEA,IADT,CAEE,GAAG,CAAE,CAFP,CAGE,IAAI,CAAE,IAHR,CAIE,GAAG,CAAE,GAJP,CAKE,KAAK,CAAEY,cALT,CAME,gBAAgB,CAAET,gBANpB,CAOE,gBAAgB,CAAEA,gBAPpB,CAQE,QAAQ,CAAEW,YARZ,CASE,kBAAgB,mBATlB,EAJF,GAHF,cAmBE,KAAC,UAAD,EAAY,IAAI,CAAE,MAAlB,CAA0B,GAAG,CAAEjB,GAA/B,CAAoC,IAAI,CAAE,MAA1C,EAnBF,GAFF,GADF,CA0BD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nconst QnA = QNA[16];\n\nfunction Q17(props) {\n  const Res = props.location.state.Res;\n\n  const [Resp, getResp] = useState(10);\n  QnA.status = true;\n\n  function valueLabelFormat(Resp) {\n    const units = ['만원', '억원'];\n  \n    let unitIndex = 0;\n    let scaledValue = Resp;\n\n    Res[QnA.page] = parseInt(scaledValue);\n  \n    if(scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue/10)*10;\n    }\n\n    while (scaledValue >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10000;\n    }\n    return `${parseInt(scaledValue)} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Resp) {\n    return 10 * Math.pow(10, (Resp)/25);\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      getResp(newValue);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className='Content'>\n        <h3 className='page'>{ QnA.page }</h3> \n        <h1 className='question'> { QnA.Question }</h1>\n        <Box sx={{ width: 300, display: 'inline-block' }}>\n          <Typography id=\"non-linear-slider\" gutterBottom>\n            투자 금액: {valueLabelFormat(calculateValue(Resp))}\n          </Typography>\n          <Slider\n            value={Resp}\n            min={0}\n            step={0.02}\n            max={100}\n            scale={calculateValue}\n            getAriaValueText={valueLabelFormat}\n            valueLabelFormat={valueLabelFormat}\n            onChange={handleChange}\n            aria-labelledby=\"non-linear-slider\"\n          />\n        </Box>\n        <NextButton Path={\"/q18\"} Res={Res} Text={'Next'}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Q17;\n"]},"metadata":{},"sourceType":"module"}